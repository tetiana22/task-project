{"version":3,"file":"static/js/277.9d707a53.chunk.js","mappings":"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","sources":["assets/fonts/images/icons/Close.jsx","components/Auth/RegistrationPg/RegistrationPg.styled.jsx","components/ButtonPlus/ButtonPlus.styled.jsx","components/ButtonPlus/ButtonPlus.jsx","components/Modals/EditProfileModal/EditProfileModal.styled.jsx","components/validation/schema.jsx","components/Boards/HeaderDashboard/HeaderDashboard.jsx","components/Boards/MainDashboard/MainDashboard.styled.jsx","components/AddColumn/AddColumn.jsx","components/Modals/AddColumModal/AddColumnModal.jsx","components/Boards/MainDashboard/MainDashboard.jsx","pages/Home/ScreensPage/ScreensPage.styled.jsx","pages/Home/ScreensPage/ScreensPage.jsx","redux/menu/selectors.js"],"sourcesContent":["import React from 'react';\n\nexport function Close() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M6 18L18 6M6 6L18 18\"\n        stroke=\"#fff\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  position: relative;\n  width: 100%;\n  button {\n    display: flex;\n    position: absolute;\n    right: 10px;\n    top: 60%;\n    transform: translateY(-50%);\n    border: none;\n    cursor: pointer;\n    background-color: transparent;\n    opacity: 0.4;\n  }\n`;\n\nexport const Input = styled.input`\n  width: calc(100% - 0%);\n  padding: 14px 18px;\n  color: #fff;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4;\n  background: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  outline: none;\n  transition: all 150ms ease;\n\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    opacity: 1;\n  }\n\n  &::placeholder {\n    color: #fff;\n  }\n\n  &::after {\n    color: #fc8181;\n    border-color: #fc8181;\n\n    &::placeholder {\n      color: #fc8181;\n    }\n  }\n  @media screen and (min-width: 375px) {\n    width: calc(100% - 0%);\n  }\n  @media screen and (min-width: 768px) {\n    width: calc(100% - 0%);\n  }\n`;\n\nexport const Error = styled.p`\n  font-size: 12px;\n  line-height: normal;\n  color: #fc8181;\n`;\n\nexport const Button = styled.button`\n  width: calc(100% + 0%);\n  color: #161616;\n  text-align: center;\n  border: none;\n  text-decoration: none;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background-color: #bedbb0;\n  border-radius: 8px;\n  padding: 14px;\n  &:hover {\n    transition: opacity 200ms linear;\n    background-color: #9dc888;\n  }\n  @media screen and (min-width: 320px) {\n  }\n  @media screen and (min-width: 375px) {\n    width: 284px;\n  }\n  @media screen and (min-width: 765px) {\n    width: 344px;\n  }\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin: 20px;\n`;\nexport const TextInput = styled.input`\n  padding: 14px 19px 109px 18px;\n  color: #fff;\n  height: 49px;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4;\n  background: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  outline: none;\n  transition: all 150ms ease;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    color: #fff;\n  }\n\n  &::after {\n    color: #fc8181;\n    border-color: #fc8181;\n\n    &::placeholder {\n      color: #fc8181;\n    }\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 285px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 306px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 306px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  width: 100%;\n  height: 45px;\n  text-align: center;\n  border: none;\n  text-decoration: none;\n  cursor: pointer;\n  font-size: 14px;\n  display: inline-flex;\n  padding: 14px 78px 14px 79px;\n  justify-content: center;\n  align-items: center;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background-color: ${props =>\n    props.$approve\n      ? props.theme.colors.inputColor\n      : props.theme.colors.blackColor};\n  border-radius: 8px;\n\n  &:hover {\n    transition: opacity 200ms linear;\n    background-color: ${props =>\n      props.$approve\n        ? props.theme.colors.accentColor\n        : props.theme.colors.blackColor};\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.blackColor};\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n`;\nexport const Icon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.colors.whiteColor};\n`;\n\nexport const Text = styled.p`\n  color: ${props => props.theme.colors.blackColor};\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 150px;\n`;\n","import { Button, IconWrapper, Icon, Wrap } from './ButtonPlus.styled';\nimport sprite from '../../assets/fonts/images/icons/icons-sprite.svg';\n\nconst ButtonPlus = ({ text, approve, onOpen }) => {\n  return (\n    <Button type=\"submit\" $approve={approve} onClick={onOpen}>\n      <Wrap>\n        <IconWrapper>\n          <Icon>\n            <use href={sprite + '#icon-plus'} />\n          </Icon>\n        </IconWrapper>\n        {text}\n      </Wrap>\n    </Button>\n  );\n};\nexport default ButtonPlus;\n","import styled from 'styled-components';\n\nexport const CloseModalCrossStyled = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  float: inline-end;\n`;\n\nexport const Div = styled.div`\n  width: 100vw; /* Full width of the viewport */\n  height: 100vh; /* Full height of the viewport */\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\n  /* z-index: 1000;  */\n  position: absolute;\n`;\n\nexport const ModalContainer = styled.div`\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.priorityGreen};\n  width: 335px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 999;\n  position: absolute;\n  background-color: black;\n  padding: 24px;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nexport const ModalTitle = styled.h2`\n  color: ${props => props.theme.colors.whiteColor};\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n`;\n","import * as yup from 'yup';\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const logInSchema = yup.object().shape({\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  password: yup\n    .string()\n    .min(8, 'Min length 8')\n    .max(64, 'Max length 64')\n    .required(),\n});\n\nexport const registrationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Name must be at least 2 characters')\n    .max(32, 'Name must be at most 32 characters')\n    .required('Name is required'),\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters long')\n    .required('Password is required'),\n});\n\nexport const needHelpSchema = yup.object().shape({\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  message: yup.string().min(7).max(230).required('Comment is required'),\n});\n\nexport const editColumnSchema = yup.object().shape({\n  title: yup\n    .string()\n    .min(3, 'Title must be at least 3 characters long')\n    .required('Title is required'),\n});\n","const HeaderDashboard = ({ board }) => {\n  return (\n    <div>\n      <h2>{board.title}</h2>\n    </div>\n  );\n};\n\nexport default HeaderDashboard;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n\n  overflow-x: scroll;\n  width: 100%;\n  height: 100%;\n  margin-bottom: 8px;\n\n  user-select: none;\n`;\n\nexport const ContentWrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 34px;\n`;\n","import ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { editColumnSchema } from 'components/validation/schema';\nimport {\n  Input,\n  Error,\n  Form,\n} from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from '../../redux/cards/cardsReducers';\n\nconst AddColumn = ({ bordId }) => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touched = {} },\n    reset,\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      title: '',\n    },\n    resolver: yupResolver(editColumnSchema),\n  });\n\n  const onSubmit = data => {\n    dispatch(addColumn({ bordId, data }));\n    console.log({ bordId, data });\n\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        type=\"text\"\n        id=\"title\"\n        placeholder=\"To do\"\n        {...register('title')}\n        error={touched.title && errors.title && errors.title.message}\n      />\n      {errors.title && <Error>{errors.title.message}</Error>}\n\n      <ButtonPlus type=\"submit\" approve=\"true\" text=\"Add\" />\n    </Form>\n  );\n};\n\nexport default AddColumn;\n","// import { Modal } from '../../mainModal/MainModal';\n// import { modalNames } from '../../../constant/constant';\nimport {\n  Div,\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  CloseModalCrossStyled,\n} from '../EditProfileModal/EditProfileModal.styled';\nimport { Close } from 'assets/fonts/images/icons/Close';\nimport AddColumn from 'components/AddColumn/AddColumn';\nconst AddColumModal = ({ onClose }) => {\n  return (\n    <Div onClick={onClose}>\n      <ModalContainer onClick={e => e.stopPropagation()}>\n        <ModalHeader>\n          <ModalTitle>Add column</ModalTitle>\n          <CloseModalCrossStyled type=\"button\" onClick={onClose}>\n            <Close />\n          </CloseModalCrossStyled>\n        </ModalHeader>\n        <AddColumn />\n      </ModalContainer>\n    </Div>\n  );\n};\nexport default AddColumModal;\n","import React, { useState, useRef } from 'react';\n\nimport { ContentWrapper, Wrapper } from './MainDashboard.styled';\nimport AddColumnModal from '../../Modals/AddColumModal/AddColumnModal';\n\nimport ButtonPlus from 'components/ButtonPlus/ButtonPlus';\n\nconst MainDashboard = () => {\n  const [open, setOpen] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const scrollRef = useRef(null);\n  const [startX, setStartX] = useState(0);\n\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpen(false);\n  };\n\n  const handleMouseDown = e => {\n    if (e.button === 0) {\n      const target = e.target.tagName.toLowerCase();\n      if (target !== 'input' && target !== 'textarea') {\n        setIsDragging(true);\n        setStartX(e.pageX - scrollRef.current.offsetLeft);\n      }\n    }\n  };\n\n  const handleMouseMove = e => {\n    if (!isDragging || open) return;\n    const x = e.pageX - scrollRef.current.offsetLeft;\n    const walk = (x - startX) * 0.05;\n    scrollRef.current.scrollLeft = scrollRef.current.scrollLeft - walk;\n  };\n\n  const handleMouseUp = e => {\n    if (e.button === 0) {\n      setIsDragging(false);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <ContentWrapper\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        {/* {columns &&\n          columns.map(item => <ColumnTask key={item._id} item={item} />)} */}\n\n        <ButtonPlus approve={true} onOpen={onOpen} text=\"Add column\" />\n      </ContentWrapper>\n\n      {open && <AddColumnModal onClose={handleCloseModal} />}\n    </Wrapper>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n\n  height: calc(100vh - 60px);\n\n  background-image: url(${props => props.bgcUrl});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  padding: 14px 20px 0 20px;\n\n  margin-left: ${props => (props.isOpen ? '225px' : '0')};\n  opacity: ${props => (props.isOpen ? '0.6' : '1')};\n  transition: all 250ms linear;\n\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 68px);\n    padding: 26px 32px 0 32px;\n\n    margin-left: ${props => (props.isOpen ? '260px' : '0')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 10px 24px 0 24px;\n    margin-left: 260px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport HeaderDashboard from 'components/Boards/HeaderDashboard/HeaderDashboard';\nimport MainDashboard from 'components/Boards/MainDashboard/MainDashboard';\nimport { selectIsMenuOpen } from '../../../redux/menu/selectors';\nimport { closeMenuMode } from '../../../redux/menu/menuSlice';\nimport { Wrapper } from './ScreensPage.styled';\nimport { useParams } from 'react-router-dom';\n\nconst ScreensPage = () => {\n  const dispatch = useDispatch();\n  const { boardId } = useParams();\n  const boards = useSelector(state => state.dashboards.boards);\n  const currentBoard = boards.find(board => board._id === boardId);\n  const menuMode = useSelector(selectIsMenuOpen);\n  console.log(currentBoard);\n\n  const handleScreenClick = () => {\n    if (menuMode) {\n      dispatch(closeMenuMode());\n    }\n  };\n\n  return (\n    <Wrapper onClick={handleScreenClick} isOpen={menuMode}>\n      <HeaderDashboard board={currentBoard} />\n\n      <MainDashboard board={currentBoard} />\n    </Wrapper>\n  );\n};\n\nexport default ScreensPage;\n","export const selectIsMenuOpen = state => state.menuMode.isMenuOpen;\n"],"names":["Close","_jsx","xmlns","width","height","viewBox","fill","children","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Wrap","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Error","_templateObject3","Button","_templateObject4","Form","_templateObject5","Container","_templateObject6","_templateObject7","props","$approve","theme","colors","inputColor","blackColor","accentColor","IconWrapper","Icon","whiteColor","_ref","text","approve","onOpen","type","onClick","_jsxs","href","sprite","CloseModalCrossStyled","Div","ModalContainer","priorityGreen","ModalHeader","ModalTitle","emailRegexp","logInSchema","yup","shape","email","matches","required","password","min","max","registrationSchema","name","editColumnSchema","message","title","board","Wrapper","ContentWrapper","bordId","dispatch","useDispatch","_useForm","useForm","mode","defaultValues","resolver","yupResolver","register","handleSubmit","_useForm$formState","formState","errors","_useForm$formState$to","touched","reset","onSubmit","data","addColumn","console","log","_objectSpread","id","placeholder","error","ButtonPlus","onClose","e","stopPropagation","AddColumn","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","isDragging","setIsDragging","scrollRef","useRef","_useState5","_useState6","startX","setStartX","onMouseDown","button","target","tagName","toLowerCase","pageX","current","offsetLeft","onMouseMove","walk","scrollLeft","onMouseUp","AddColumnModal","bgcUrl","isOpen","boardId","useParams","currentBoard","useSelector","state","dashboards","boards","find","_id","menuMode","selectIsMenuOpen","closeMenuMode","HeaderDashboard","MainDashboard","isMenuOpen"],"sourceRoot":""}