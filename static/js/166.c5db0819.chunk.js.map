{"version":3,"file":"static/js/166.c5db0819.chunk.js","mappings":"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","sources":["pages/Auth/RegistrationPg/RegistrationPg.jsx","pages/Auth/RegistrationPg/RegistrationPg.styled.jsx","validation/schema.jsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { registration } from '../../../redux/authorization/authReducer';\nimport { registrationSchema } from '../../../validation/schema';\nimport {\n  Input,\n  Button,\n  Form,\n  Error,\n  Container,\n  Wrap,\n} from './RegistrationPg.styled';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nfunction Registration() {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touched = {}, isValid },\n    reset,\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    resolver: yupResolver(registrationSchema),\n  });\n\n  const onSubmit = data => {\n    dispatch(registration(data));\n    reset();\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Wrap>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            id=\"name\"\n            {...register('name')}\n            error={touched.name && errors.name}\n          />\n          {errors.name && <Error>{errors.name.message}</Error>}\n        </Wrap>\n        <Wrap>\n          <Input\n            type=\"email\"\n            id=\"email\"\n            placeholder=\"Enter your email\"\n            {...register('email')}\n            error={touched.email && errors.email}\n          />\n          {errors.email && <Error>{errors.email.message}</Error>}\n        </Wrap>\n        <Wrap>\n          <Input\n            type=\"password\"\n            id=\"password\"\n            placeholder=\"Create a password\"\n            {...register('password')}\n            error={touched.password && errors.password}\n          />\n          {errors.password && <Error>{errors.password.message}</Error>}\n        </Wrap>\n        <Button type=\"submit\" disabled={!isValid}>\n          Register Now\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Registration;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  position: relative;\n  width: 100%;\n  button {\n    display: flex;\n    position: absolute;\n    right: 10px;\n    top: 60%;\n    transform: translateY(-50%);\n    border: none;\n    cursor: pointer;\n    background-color: transparent;\n    opacity: 0.4;\n  }\n`;\n\nexport const Input = styled.input`\n  width: calc(100% - 0%);\n  padding: 14px 18px;\n  color: #fff;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4;\n  background: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  outline: none;\n  transition: all 150ms ease;\n\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    opacity: 1;\n  }\n\n  &::placeholder {\n    color: #fff;\n  }\n\n  &::after {\n    color: #fc8181;\n    border-color: #fc8181;\n\n    &::placeholder {\n      color: #fc8181;\n    }\n  }\n  @media screen and (min-width: 375px) {\n    width: calc(100% - 0%);\n  }\n  @media screen and (min-width: 768px) {\n    width: calc(100% - 0%);\n  }\n`;\n\nexport const Error = styled.p`\n  font-size: 12px;\n  line-height: normal;\n  color: #fc8181;\n`;\n\nexport const Button = styled.button`\n  width: calc(100% + 0%);\n  color: #161616;\n  text-align: center;\n  border: none;\n  text-decoration: none;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background-color: #bedbb0;\n  border-radius: 8px;\n  padding: 14px;\n  &:hover {\n    transition: opacity 200ms linear;\n    background-color: #9dc888;\n  }\n  @media screen and (min-width: 320px) {\n  }\n  @media screen and (min-width: 375px) {\n    width: 284px;\n  }\n  @media screen and (min-width: 765px) {\n    width: 344px;\n  }\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin: 20px;\n`;\nexport const TextInput = styled.input`\n  padding: 14px 19px 109px 18px;\n  color: #fff;\n  height: 49px;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4;\n  background: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  outline: none;\n  transition: all 150ms ease;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    color: #fff;\n  }\n\n  &::after {\n    color: #fc8181;\n    border-color: #fc8181;\n\n    &::placeholder {\n      color: #fc8181;\n    }\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 285px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 306px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 306px;\n  }\n`;\n","import * as yup from 'yup';\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const logInSchema = yup.object().shape({\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  password: yup\n    .string()\n    .min(8, 'Min length 8')\n    .max(64, 'Max length 64')\n    .required(),\n});\n\nexport const registrationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Name must be at least 2 characters')\n    .max(32, 'Name must be at most 32 characters')\n    .required('Name is required'),\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters long')\n    .required('Password is required'),\n});\n\nexport const needHelpSchema = yup.object().shape({\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  comment: yup.string().min(7).max(230).required('Comment is required'),\n});\n\nexport const editColumnSchema = yup.object().shape({\n  title: yup\n    .string()\n    .min(3, 'Title must be at least 3 characters long')\n    .required('Title is required'),\n});\n\nexport const addCardSchema = yup.object().shape({\n  title: yup.string().required('Title is required!'),\n  description: yup\n    .string()\n    .min(3, 'Title must be at least 3 characters long')\n    .max(230, 'Name must be at most 230 characters'),\n});\n\nexport const updateUserSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Name must be at least 2 characters')\n    .max(32, 'Name must be at most 32 characters'),\n\n  email: yup.string().matches(emailRegexp, 'Email is not valid'),\n  password: yup.string().min(8, 'Min length 8').max(64, 'Max length 64'),\n});\n"],"names":["dispatch","useDispatch","_useForm","useForm","mode","defaultValues","name","email","password","resolver","yupResolver","registrationSchema","register","handleSubmit","_useForm$formState","formState","errors","_useForm$formState$to","touched","isValid","reset","_jsx","Container","children","_jsxs","Form","onSubmit","data","registration","Wrap","Input","_objectSpread","type","placeholder","id","error","Error","message","Button","disabled","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","emailRegexp","logInSchema","yup","shape","matches","required","min","max","needHelpSchema","comment","editColumnSchema","title","addCardSchema","description","updateUserSchema"],"sourceRoot":""}