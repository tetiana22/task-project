{"version":3,"file":"static/js/777.8716f59d.chunk.js","mappings":"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","sources":["assets/fonts/images/icons/Close.jsx","assets/fonts/images/icons/Eye.jsx","assets/fonts/images/icons/EyeCrossed.jsx","components/Auth/RegistrationPg/RegistrationPg.styled.jsx","components/ButtonPlus/ButtonPlus.styled.jsx","components/ButtonPlus/ButtonPlus.jsx","components/Modals/EditProfileModal/EditProfileModal.styled.jsx","components/validation/schema.jsx","assets/fonts/images/icons/Burger.jsx","components/EditProfile/EditProfile.styled.component.jsx","components/EditProfile/EditProfile.jsx","components/Modals/EditProfileModal/EditProfileModal.jsx","components/Header/Header.styled.jsx","components/AddBoard/AddBoard.styled.jsx","components/EditBoard/EditBoard.jsx","components/Modals/EditBoardModal/EditBoardModal.jsx","components/Sidebar/BordItem/BordItem.styled.jsx","components/Sidebar/BordItem/BordItem.jsx","components/Sidebar/BorderList/BorderList.styled.jsx","components/Sidebar/BorderList/BorderList.jsx","components/AddBoard/AddBoard.jsx","components/Modals/AddBoardModal/AddBoardModal.jsx","components/Sidebar/Sidebar.styled.jsx","components/Sidebar/Sidebar.jsx","components/Header/Header.jsx","components/Home/Home.styled.jsx","components/StartBoard/Board/Board.styled.jsx","components/StartBoard/Board/Board.jsx","components/Home/Home.jsx","pages/Home/Home.jsx","redux/menu/selectors.js"],"sourcesContent":["import React from 'react';\n\nexport function Close() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M6 18L18 6M6 6L18 18\"\n        stroke=\"#fff\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport function Eye() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M1.35726 8.21467C1.31125 8.07639 1.31125 7.92694 1.35726 7.78867C2.28193 5.00667 4.90659 3 7.99993 3C11.0919 3 13.7153 5.00467 14.6419 7.78533C14.6886 7.92333 14.6886 8.07267 14.6419 8.21133C13.7179 10.9933 11.0933 13 7.99993 13C4.90793 13 2.28393 10.9953 1.35726 8.21467Z\"\n        stroke=\"#fff\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M10 8C10 8.53043 9.78929 9.03914 9.41421 9.41421C9.03914 9.78929 8.53043 10 8 10C7.46957 10 6.96086 9.78929 6.58579 9.41421C6.21071 9.03914 6 8.53043 6 8C6 7.46957 6.21071 6.96086 6.58579 6.58579C6.96086 6.21071 7.46957 6 8 6C8.53043 6 9.03914 6.21071 9.41421 6.58579C9.78929 6.96086 10 7.46957 10 8Z\"\n        stroke=\"#fff\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport function EyeSlash() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M2.65331 5.482C2.02961 6.21812 1.56518 7.07547 1.28931 8C2.15064 10.892 4.82931 13 7.99997 13C8.66197 13 9.30197 12.908 9.90864 12.7367M4.15197 4.152C5.29372 3.39854 6.63202 2.99788 7.99997 3C11.1706 3 13.8486 5.108 14.71 7.99867C14.2379 9.5782 13.2246 10.941 11.848 11.848M4.15197 4.152L1.99997 2M4.15197 4.152L6.58531 6.58533M11.848 11.848L14 14M11.848 11.848L9.41464 9.41467C9.60037 9.22893 9.7477 9.00844 9.84822 8.76577C9.94874 8.52309 10.0005 8.263 10.0005 8.00033C10.0005 7.73767 9.94874 7.47757 9.84822 7.2349C9.7477 6.99223 9.60037 6.77173 9.41464 6.586C9.22891 6.40027 9.00841 6.25294 8.76574 6.15242C8.52307 6.0519 8.26297 6.00016 8.00031 6.00016C7.73764 6.00016 7.47755 6.0519 7.23487 6.15242C6.9922 6.25294 6.77171 6.40027 6.58597 6.586M9.41397 9.414L6.58664 6.58667\"\n        stroke=\"#fff\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  position: relative;\n  width: 100%;\n  button {\n    display: flex;\n    position: absolute;\n    right: 10px;\n    top: 60%;\n    transform: translateY(-50%);\n    border: none;\n    cursor: pointer;\n    background-color: transparent;\n    opacity: 0.4;\n  }\n`;\n\nexport const Input = styled.input`\n  width: calc(100% - 0%);\n  padding: 14px 18px;\n  color: #fff;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4;\n  background: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  outline: none;\n  transition: all 150ms ease;\n\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    opacity: 1;\n  }\n\n  &::placeholder {\n    color: #fff;\n  }\n\n  &::after {\n    color: #fc8181;\n    border-color: #fc8181;\n\n    &::placeholder {\n      color: #fc8181;\n    }\n  }\n  @media screen and (min-width: 375px) {\n    width: calc(100% - 0%);\n  }\n  @media screen and (min-width: 768px) {\n    width: calc(100% - 0%);\n  }\n`;\n\nexport const Error = styled.p`\n  font-size: 12px;\n  line-height: normal;\n  color: #fc8181;\n`;\n\nexport const Button = styled.button`\n  width: calc(100% + 0%);\n  color: #161616;\n  text-align: center;\n  border: none;\n  text-decoration: none;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background-color: #bedbb0;\n  border-radius: 8px;\n  padding: 14px;\n  &:hover {\n    transition: opacity 200ms linear;\n    background-color: #9dc888;\n  }\n  @media screen and (min-width: 320px) {\n  }\n  @media screen and (min-width: 375px) {\n    width: 284px;\n  }\n  @media screen and (min-width: 765px) {\n    width: 344px;\n  }\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin: 20px;\n`;\nexport const TextInput = styled.input`\n  padding: 14px 19px 109px 18px;\n  color: #fff;\n  height: 49px;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: 1px solid #bedbb0;\n  opacity: 0.4;\n  background: #1f1f1f;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  outline: none;\n  transition: all 150ms ease;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::placeholder {\n    color: #fff;\n  }\n\n  &::after {\n    color: #fc8181;\n    border-color: #fc8181;\n\n    &::placeholder {\n      color: #fc8181;\n    }\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 285px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 306px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 306px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  width: 100%;\n  height: 45px;\n  text-align: center;\n  border: none;\n  text-decoration: none;\n  cursor: pointer;\n  font-size: 14px;\n  display: inline-flex;\n  padding: 14px 78px 14px 79px;\n  justify-content: center;\n  align-items: center;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background-color: ${props =>\n    props.$approve\n      ? props.theme.colors.inputColor\n      : props.theme.colors.blackColor};\n  border-radius: 8px;\n\n  &:hover {\n    transition: opacity 200ms linear;\n    background-color: ${props =>\n      props.$approve\n        ? props.theme.colors.accentColor\n        : props.theme.colors.blackColor};\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.blackColor};\n  transition: all 250ms linear;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n`;\nexport const Icon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.colors.whiteColor};\n`;\n\nexport const Text = styled.p`\n  color: ${props => props.theme.colors.blackColor};\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  width: 150px;\n`;\n","import { Button, IconWrapper, Icon, Wrap } from './ButtonPlus.styled';\nimport sprite from '../../assets/fonts/images/icons/icons-sprite.svg';\n\nconst ButtonPlus = ({ text, approve, onOpen }) => {\n  return (\n    <Button type=\"submit\" $approve={approve} onClick={onOpen}>\n      <Wrap>\n        <IconWrapper>\n          <Icon>\n            <use href={sprite + '#icon-plus'} />\n          </Icon>\n        </IconWrapper>\n        {text}\n      </Wrap>\n    </Button>\n  );\n};\nexport default ButtonPlus;\n","import styled from 'styled-components';\n\nexport const CloseModalCrossStyled = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  float: inline-end;\n`;\n\nexport const Div = styled.div`\n  width: 100vw; /* Full width of the viewport */\n  height: 100vh; /* Full height of the viewport */\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\n  /* z-index: 1000;  */\n  position: absolute;\n`;\n\nexport const ModalContainer = styled.div`\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.priorityGreen};\n  width: 335px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 999;\n  position: absolute;\n  background-color: black;\n  padding: 24px;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nexport const ModalTitle = styled.h2`\n  color: ${props => props.theme.colors.whiteColor};\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n`;\n","import * as yup from 'yup';\nconst emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const logInSchema = yup.object().shape({\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  password: yup\n    .string()\n    .min(8, 'Min length 8')\n    .max(64, 'Max length 64')\n    .required(),\n});\n\nexport const registrationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Name must be at least 2 characters')\n    .max(32, 'Name must be at most 32 characters')\n    .required('Name is required'),\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters long')\n    .required('Password is required'),\n});\n\nexport const needHelpSchema = yup.object().shape({\n  email: yup.string().matches(emailRegexp, 'Email is not valid').required(),\n  message: yup.string().min(7).max(230).required('Comment is required'),\n});\n\nexport const editColumnSchema = yup.object().shape({\n  title: yup\n    .string()\n    .min(3, 'Title must be at least 3 characters long')\n    .required('Title is required'),\n});\n","const Burger = ({ width, height, fillColor, strokeColor }) => {\n  return (\n    <svg\n      width={width || '14px'}\n      height={height || '14px'}\n      viewBox=\"0 0 32 32\"\n      fill={fillColor || 'none'}\n      stroke={strokeColor || null}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M4 16H28\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M4 8H28\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M4 24H28\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport default Burger;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  margin: 24px auto 25px;\n  border-radius: 8px;\n  width: 68px;\n  height: 68px;\n  background-image: url(${props => props.url});\n  background-position: center;\n  background-size: cover;\n`;\nexport const Avatar = styled.img`\n  width: 80px;\n  height: 80px;\n  border-radius: 100%;\n  margin-right: 8px;\n  object-fit: cover;\n`;\nexport const AvatarImg = styled.img`\n  border-radius: 8px;\n  width: 68px;\n  height: 68px;\n`;\nexport const UserButton = styled.button`\n  position: absolute;\n  bottom: -20%;\n  left: 38%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n\n  padding: 0;\n  width: 28px;\n  height: 28px;\n  border: none;\n  background-color: ${props => props.theme.colors.inputColor};\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nexport const Image = styled.img`\n  width: 68px;\n  height: 68px;\n  border-radius: 8px;\n  object-fit: cover;\n`;\nexport const Icon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.colors.blackColor};\n`;\nexport const HiddenInput = styled.input`\n  display: none;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form'; // Import useForm\nimport { yupResolver } from '@hookform/resolvers/yup'; // Import yupResolver\nimport { updateUser } from '../../redux/authorization/authReducer'; // Import updateUser action\nimport userLight from '../../assets/fonts/images/userLogo/userLight.jpg';\nimport userDark from '../../assets/fonts/images/userLogo/userDark.jpg';\nimport { registrationSchema } from 'components/validation/schema';\nimport {\n  Wrapper,\n  UserButton,\n  Icon,\n  HiddenInput,\n  Avatar,\n} from './EditProfile.styled.component';\nimport {\n  Form,\n  Button,\n  Input,\n  Error,\n  Wrap,\n} from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport sprite from '../../assets/fonts/images/icons/icons-sprite.svg';\nimport { toast } from 'react-toastify';\nimport { Container } from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport { Eye } from 'assets/fonts/images/icons/Eye';\nimport { EyeSlash } from 'assets/fonts/images/icons/EyeCrossed';\nconst EditProfile = () => {\n  const dispatch = useDispatch();\n  const avatarURL = useSelector(state => state.auth.avatarURL);\n  const theme = useSelector(state => state.auth.theme);\n  const [selectedAvatar, setSelectedAvatar] = useState(avatarURL);\n  const [showPassword, setShowPassword] = useState(false);\n  const swapPassword = () => {\n    setShowPassword(!showPassword);\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touched = {} },\n    reset,\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      name: '',\n      email: '',\n      password: '',\n      avatarURL: '',\n    },\n    resolver: yupResolver(registrationSchema),\n  });\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (!file) {\n      return; // Перевірити, чи файл існує\n    }\n    if (file.size > 50 * 1024) {\n      toast.error('The file size must not exceed 50 KB');\n      return;\n    }\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setSelectedAvatar(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const onSubmit = data => {\n    // Додати avatarURL до об'єкту data\n    data.avatarURL = selectedAvatar;\n    dispatch(updateUser(data));\n    console.log(data);\n    reset();\n  };\n  return (\n    <Container>\n      <Wrapper>\n        <Avatar\n          src={selectedAvatar || (theme === 'dark' ? userLight : userDark)}\n          alt=\"Avatar\"\n        />\n        <UserButton\n          onClick={() => document.querySelector('.input-field').click()}\n        >\n          <Icon>\n            <use href={sprite + '#icon-plus'} />\n          </Icon>\n          <HiddenInput\n            className=\"input-field\"\n            type=\"file\"\n            accept=\"image/*\"\n            name=\"imageURL\"\n            onChange={handleFileSelect}\n          />\n        </UserButton>\n      </Wrapper>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Wrap>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            id=\"name\"\n            {...register('name')}\n            error={touched.name && errors.name?.message}\n          />\n          {errors.name && <Error>{errors.name.message}</Error>}\n        </Wrap>\n        <Wrap>\n          <Input\n            type=\"email\"\n            id=\"email\"\n            placeholder=\"Enter your email\"\n            {...register('email')}\n            error={touched.email && errors.email?.message}\n          />\n          {errors.email && <Error>{errors.email.message}</Error>}\n        </Wrap>\n        <Wrap>\n          <Input\n            type={showPassword ? 'text' : 'password'}\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Create a password\"\n            autoComplete=\"off\"\n            {...register('password')}\n            error={touched.password && errors.password}\n          />\n          {errors.password && <Error>{errors.password.message}</Error>}\n          <button type=\"button\" onClick={swapPassword}>\n            {showPassword ? <Eye /> : <EyeSlash />}\n          </button>\n        </Wrap>\n        <Button type=\"submit\">Send</Button>\n      </Form>\n    </Container>\n  );\n};\nexport default EditProfile;\n","import {\n  Div,\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  CloseModalCrossStyled,\n} from '../EditProfileModal/EditProfileModal.styled';\nimport { Close } from 'assets/fonts/images/icons/Close';\n// import { Modal } from '../../mainModal/MainModal';\nimport EditProfile from 'components/EditProfile/EditProfile';\n\nconst EditProfileModal = ({ onClose }) => {\n  return (\n    // <Modal modalId={modalNames.EDIT_PROFILE}>\n    <Div onClick={onClose}>\n      <ModalContainer onClick={e => e.stopPropagation()}>\n        <ModalHeader>\n          <ModalTitle>Edit profile</ModalTitle>\n          <CloseModalCrossStyled type=\"button\" onClick={onClose}>\n            <Close />\n          </CloseModalCrossStyled>\n        </ModalHeader>\n        <EditProfile />\n      </ModalContainer>\n    </Div>\n    // </Modal>\n  );\n};\n\nexport default EditProfileModal;\n","import { styled } from 'styled-components';\n\nexport const HeaderContainer = styled.header`\n  margin: 0 auto;\n  padding: 8px 20px 0;\n  width: 320px;\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 16px 32px 0;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding: 12px 112px 0;\n  }\n`;\nexport const UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const UserLogoContainer = styled.div`\n  position: relative;\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n\n  & :nth-child(2) {\n    margin-left: 8px;\n  }\n\n  & :nth-child(3) {\n    margin-left: 4px;\n  }\n\n  &:hover > *,\n  &:focus-within > * {\n  }\n`;\n\nexport const DefaultNeme = styled.p`\n  text-transform: uppercase;\n`;\n\nexport const UserNameText = styled.p`\n  color: #fff;\n  @media (min-width: 768px) {\n    width: auto;\n    line-height: 1.33;\n  }\n`;\n\nexport const UserAvatar = styled.img`\n  width: 28px;\n  height: 28px;\n  border-radius: 100%;\n  object-fit: cover;\n`;\n\nexport const BurgerIcon = styled.svg`\n  display: flex;\n  flex-shrink: 0;\n  width: 32px;\n  height: 32px;\n  background-color: transparent;\n\n  cursor: pointer;\n`;\n\nexport const UserImage = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  background-color: transparent;\n  color: inherit;\n`;\n\nexport const UserIcon = styled.svg`\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  background-color: transparent;\n  color: inherit;\n`;\nexport const Avatar = styled.img`\n  width: 80px;\n  height: 80px;\n  border-radius: 8px;\n  margin-right: 8px;\n  object-fit: cover;\n`;\nexport const Ava = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  margin-right: 8px;\n  object-fit: cover;\n`;\nexport const BurgerButton = styled.button`\n  @media (min-width: 1440px) {\n    display: {\n      xs: block;\n      sm: none;\n    }\n  }\n  min-width: 0;\n  padding: 0;\n  &:hover {\n    background-color: transparent;\n  }\n`;\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  justify-content: end;\n`;\n\nexport const UserText = styled.h3`\n  margin-right: 8px;\n  width: auto;\n  /* color: 'text.primary'; */\n  font-family: Poppins;\n  font-size: 14px;\n  letter-spacing: 0.7;\n  font-weight: 500;\n`;\n\nexport const UserButton = styled.button`\n  min-width: 0;\n  padding: 0;\n  border: 0;\n  &:hover {\n    background-color: inherit;\n    border: 0;\n    transform: scale(1.1);\n  }\n`;\n\nexport const HeaderSection = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 60px;\n  padding: 18px 20px;\n  background-color: #161616;\n  color: #fff;\n  @media screen and (min-width: 768px) {\n    height: 68px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n  @media screen and (min-width: 1440px) {\n    justify-content: flex-end;\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`;\n\nexport const BurgerBtn = styled.button`\n  background-color: transparent;\n\n  svg,\n  path {\n    stroke: #fff;\n\n    @media screen and (min-width: 768px) {\n      width: 32px;\n      height: 32px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderUserWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  @media screen and (min-width: 768px) {\n    gap: 14px;\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 25px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n\n  &:last-of-type {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const FormTitle = styled.h3`\n  color: ${props => props.theme.colors.whiteColor};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n\n  margin-bottom: 14px;\n`;\n\nexport const RadioBtnWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: start;\n  align-items: flex-start;\n  padding-right: 25px;\n  gap: 4px;\n`;\n\nexport const IconWrapper = styled.label``;\n\nexport const Icon = styled.svg`\n  cursor: pointer;\n  stroke: rgba(255, 255, 255, 0.5);\n  fill: transparent;\n  transition: all 250ms linear;\n\n  &:hover {\n    stroke: ${props => props.theme.colors.whiteColor};\n  }\n\n  &.active {\n    scale: 1.3;\n    transform: rotate(360deg);\n    stroke: ${props => props.theme.colors.whiteColor};\n  }\n\n  &:focus {\n    stroke: ${props => props.theme.colors.whiteColor};\n  }\n`;\n\nexport const DefaultRadioBtn = styled.input`\n  appearance: none;\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const CustomRadioBtn = styled.div`\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n  background-image: url(${props => props.$url});\n  background-position: center;\n  background-size: cover;\n\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &.active {\n    scale: 1.1;\n  }\n`;\n\nexport const BgcItem = styled.div`\n  border-radius: 8px;\n  border: none;\n  outline: none;\n  width: 28px;\n  height: 28px;\n  background-position: center;\n  background-size: contain;\n  background-color: ${props => props.theme.colors.whiteColor};\n\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &.active {\n    scale: 1.1;\n  }\n`;\n","import ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { editColumnSchema } from 'components/validation/schema';\nimport {\n  Input,\n  Error,\n  Form,\n} from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport {\n  DefaultRadioBtn,\n  CustomRadioBtn,\n  BgcItem,\n  FormWrapper,\n  RadioBtnWrapper,\n  FormTitle,\n  Icon,\n  IconWrapper,\n} from '../AddBoard/AddBoard.styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport sprite from '../../assets/fonts/images/icons/icons-sprite.svg';\nimport { useState } from 'react';\nimport data from '../../assets/fonts/images/backs-small/backs.json';\nimport { editBoard } from '../../redux/cards/cardsReducers';\n\nconst EditBoard = ({ boardId }) => {\n  const [bgdImg, setBgdImg] = useState('');\n\n  const [icons, setIcon] = useState('');\n  const dispatch = useDispatch();\n  const options = [\n    '#icon-Project',\n    '#icon-star',\n    '#icon-loading',\n    '#icon-puzzle-piece',\n    '#icon-container',\n    '#icon-lightning',\n    '#icon-colors',\n    '#icon-hexagon',\n  ];\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touched = {} },\n    reset,\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      title: '',\n      icon: icons,\n      background: bgdImg,\n    },\n    resolver: yupResolver(editColumnSchema),\n  });\n  const onSubmit = values => {\n    const { title, icon, background } = values;\n\n    const updatedData = { title, icon, background };\n\n    dispatch(editBoard({ _id: boardId, updatedData }));\n    console.log({ _id: boardId });\n    reset();\n  };\n  const handleBgDImg = url => {\n    setBgdImg(url);\n  };\n  const handleIcon = el => {\n    setIcon(el);\n  };\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        type=\"text\"\n        id=\"title\"\n        name=\"title\"\n        placeholder=\"Project office\"\n        {...register('title')}\n        error={touched.title && errors.title && errors.title.message}\n      />\n      {errors.title && <Error>{errors.title.message}</Error>}\n      <FormWrapper>\n        <FormTitle>Icons</FormTitle>\n        <RadioBtnWrapper>\n          {options.map((icon, idx) => (\n            <IconWrapper key={idx}>\n              <Icon\n                className={icons === icon ? 'active' : ''}\n                onClick={() => handleIcon(icon)}\n                width={18}\n                height={18}\n              >\n                <use href={sprite + icon} width={18} height={18} />\n              </Icon>\n              <DefaultRadioBtn\n                type=\"radio\"\n                value={icon}\n                {...register('icon')}\n              />\n            </IconWrapper>\n          ))}\n        </RadioBtnWrapper>\n      </FormWrapper>\n\n      <FormWrapper>\n        <FormTitle>Backgrounds</FormTitle>\n        <RadioBtnWrapper>\n          {data.map((background, idx) => (\n            <label key={idx}>\n              <BgcItem\n                onClick={() => handleBgDImg(background.url)}\n                className={bgdImg === background.url ? 'active' : ''}\n              >\n                {background.url !== '' && (\n                  <CustomRadioBtn\n                    $url={background.url}\n                    onClick={() => handleBgDImg(background.url)}\n                    className={bgdImg === background.url ? 'active' : ''}\n                  />\n                )}\n              </BgcItem>\n              <DefaultRadioBtn\n                type=\"radio\"\n                value={background.url}\n                {...register('background')}\n              />\n            </label>\n          ))}\n        </RadioBtnWrapper>\n      </FormWrapper>\n\n      <ButtonPlus type=\"submit\" approve={true} text=\"Edit\" />\n    </Form>\n  );\n};\n\nexport default EditBoard;\n","// import { Modal } from '../../mainModal/MainModal';\n// import { modalNames } from '../../../constant/constant';\n\nimport EditBoard from 'components/EditBoard/EditBoard';\nimport {\n  Div,\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  CloseModalCrossStyled,\n} from '../EditProfileModal/EditProfileModal.styled';\nimport { Close } from 'assets/fonts/images/icons/Close';\n\nconst EditBoardModal = ({ isOpen, onClose, boardId }) => {\n  if (!isOpen) return null;\n  return (\n    // <Modal modalId={modalNames.EDIT_BOARD}>\n    <Div onClick={onClose}>\n      <ModalContainer onClick={e => e.stopPropagation()}>\n        <ModalHeader>\n          <ModalTitle>Edit board</ModalTitle>\n          <CloseModalCrossStyled type=\"button\" onClick={onClose}>\n            <Close />\n          </CloseModalCrossStyled>\n        </ModalHeader>\n        <EditBoard boardId={boardId} />\n      </ModalContainer>\n    </Div>\n    // </Modal>\n  );\n};\nexport default EditBoardModal;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Item = styled.li`\n  -webkit-user-drag: none;\n  -khtml-user-drag: none;\n  -moz-user-drag: none;\n  -o-user-drag: none;\n  -user-drag: none;\n  user-select: none;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 61px;\n  margin-bottom: 4px;\n  transition: all 150ms linear;\n  text-decoration: none;\n\n  cursor: pointer;\n\n  :hover {\n    background-color: rgba(31, 31, 31, 0.4);\n    color: white;\n\n    stroke: rgba(255, 255, 255, 225);\n  }\n\n  &.active {\n    color: white;\n    transition: all 150ms linear;\n\n    ::after {\n      content: '';\n      display: block;\n      position: absolute;\n      /* height: 61px; */\n      width: 4px;\n      right: 0px;\n      background-color: ${props => props.theme.sidebarLightningFill};\n      border-radius: 4px 0px 0px 4px;\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Board = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  transition: all 150ms linear;\n  padding: 0 20px;\n  text-decoration: none;\n  width: 100%;\n`;\n\nexport const BoardIcon = styled.svg`\n  height: 18px;\n  width: 18px;\n  margin-right: 8px;\n  fill: transparent;\n  stroke: rgba(255, 255, 255, 0.5);\n  transition: all 150ms linear;\n\n  :hover {\n    stroke: rgba(255, 255, 255, 225);\n  }\n`;\n\nexport const BoardTitle = styled.p`\n  display: block;\n  width: 100%;\n  padding: 20px 0;\n  color: rgba(255, 255, 255, 0.5);\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  transition: all 150ms linear;\n\n  &.active {\n    color: white;\n  }\n`;\n\nexport const IconsBlock = styled.div`\n  display: flex;\n`;\n\nexport const IconEdit = styled.svg`\n  z-index: 9999;\n  height: 16px;\n  width: 16px;\n  fill: transparent;\n  stroke: rgba(255, 255, 255, 0.5);\n  margin: 0 8px;\n  transition: all 150ms linear;\n\n  :hover {\n    stroke: rgba(255, 255, 255, 225);\n  }\n`;\n\nexport const IconDel = styled.svg`\n  z-index: 9999;\n  height: 16px;\n  width: 16px;\n  fill: transparent;\n  stroke: rgba(255, 255, 255, 0.5);\n  transition: all 150ms linear;\n\n  :hover {\n    stroke: rgba(255, 255, 255, 225);\n  }\n`;\n","import React, { useState } from 'react';\nimport { deleteDashboard } from '../../../redux/cards/cardsReducers';\nimport { closeMenuMode } from '../../../redux/menu/menuSlice';\nimport EditBoardModal from 'components/Modals/EditBoardModal/EditBoardModal';\nimport sprite from '../../../assets/fonts/images/icons/icons-sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Board,\n  BoardIcon,\n  BoardTitle,\n  IconsBlock,\n  IconEdit,\n  IconDel,\n  StyledLink,\n} from './BordItem.styled';\nimport { setCurrentBoardId } from '../../../redux/cards/cardsSlice';\n\nconst BoardItem = ({ boardId, index, onActive, activePojectIndex, board }) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const navigate = useNavigate();\n  const handleNavigate = e => {\n    if (e.dataset === 'icon') {\n      return;\n    }\n    navigate(`/home/${board._id}`);\n    dispatch(setCurrentBoardId(board._id));\n  };\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const checkTextLength = text => {\n    const str = text.split('');\n\n    if (str.length <= 10) {\n      return str.join('');\n    }\n    return str.splice(0, 10).join('') + '...';\n  };\n\n  return (\n    <>\n      <Board>\n        <StyledLink to={`/home/${boardId}`}>\n          <BoardIcon className={activePojectIndex === index ? 'active' : ''}>\n            <use href={sprite + board.icon} />\n          </BoardIcon>\n\n          <BoardTitle\n            onClick={e => {\n              onActive(boardId);\n              dispatch(closeMenuMode());\n              handleNavigate(e);\n            }}\n            className={activePojectIndex === index ? 'active' : ''}\n          >\n            {checkTextLength(board.title)}\n          </BoardTitle>\n        </StyledLink>\n        <IconsBlock>\n          <IconEdit aria-label=\"edit icon\" onClick={handleOpen}>\n            <use href={sprite + `#icon-pencil`} />\n          </IconEdit>\n          <EditBoardModal\n            onClose={handleClose}\n            isOpen={open}\n            boardId={boardId}\n          />\n\n          <IconDel\n            aria-label=\"delit icon\"\n            onClick={() => {\n              dispatch(deleteDashboard(board._id));\n            }}\n          >\n            <use href={sprite + `#icon-trash`} />\n          </IconDel>\n        </IconsBlock>\n      </Board>\n    </>\n  );\n};\n\nexport default BoardItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  /* position: relative;\n  left: 50%;\n  top: -100%;\n  transform: translate(-50%, calc(100% + 40px)); */\n  max-height: 126px;\n  padding: 0;\n  margin-bottom: 40px;\n  overflow-y: scroll;\n  scroll-behavior: auto;\n  width: 225px;\n  height: 126px;\n  ::-webkit-scrollbar {\n    width: 200px;\n    opacity: 0.4;\n    background-color: #1f1f1f;\n    border-radius: 12px;\n  }\n  ::-webkit-scrollbar-thumb {\n    width: 5px;\n    background-color: pink;\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 260px;\n  }\n\n  ::-webkit-scrollbar {\n    width: 0;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BoardItem from '../BordItem/BordItem';\nimport { List } from './BorderList.styled';\nimport {\n  getAllDashboards,\n  deleteDashboard,\n} from '../../../redux/cards/cardsReducers';\nimport { closeMenuMode } from '../../../redux/menu/menuSlice';\nimport { useRef, useState } from 'react';\nimport EditBoard from 'components/EditBoard/EditBoard';\n\nconst BoardList = () => {\n  const boards = useSelector(state => state.dashboards.boards);\n  const dispatch = useDispatch();\n  const [activeProjectIndex, setActiveProjectIndex] = useState(0);\n  const listRef = useRef(null);\n  const isMouseDownRef = useRef(false);\n  const lastClientYRef = useRef(0);\n\n  useEffect(() => {\n    dispatch(getAllDashboards());\n  }, [dispatch]);\n\n  const switchActiveProject = index => {\n    setActiveProjectIndex(index);\n  };\n\n  const handleActiveProject = boardId => {\n    switchActiveProject(boardId);\n    dispatch(closeMenuMode());\n  };\n\n  const handleMouseDown = event => {\n    isMouseDownRef.current = true;\n    lastClientYRef.current = event.clientY;\n  };\n\n  const handleMouseUp = () => {\n    isMouseDownRef.current = false;\n  };\n\n  const handleMouseMove = event => {\n    if (!isMouseDownRef.current || event.buttons !== 1) return;\n\n    const delta = (event.clientY - lastClientYRef.current) * 4;\n    lastClientYRef.current = event.clientY;\n\n    if (listRef.current) {\n      listRef.current.scrollTop += delta;\n    }\n  };\n\n  const handleDeleteBoard = boardId => {\n    dispatch(deleteDashboard(boardId));\n  };\n  const handleEditBoard = boardId => {\n    dispatch(EditBoard(boardId));\n  };\n\n  return (\n    <div>\n      {boards.length > 0 && (\n        <List\n          ref={listRef}\n          onMouseDown={handleMouseDown}\n          onMouseUp={handleMouseUp}\n          onMouseMove={handleMouseMove}\n        >\n          {boards.map((board, index) => (\n            <BoardItem\n              key={board._id}\n              board={board}\n              index={index}\n              onActive={handleActiveProject}\n              activeProjectIndex={activeProjectIndex}\n              onDelete={handleDeleteBoard}\n              boardId={board._id}\n              onEdit={handleEditBoard}\n              title={board.title}\n            />\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default BoardList;\n","import ButtonPlus from 'components/ButtonPlus/ButtonPlus';\nimport { editColumnSchema } from 'components/validation/schema';\nimport {\n  Input,\n  Error,\n  Form,\n} from 'components/Auth/RegistrationPg/RegistrationPg.styled';\nimport {\n  DefaultRadioBtn,\n  CustomRadioBtn,\n  BgcItem,\n  FormWrapper,\n  RadioBtnWrapper,\n  FormTitle,\n  Icon,\n  IconWrapper,\n} from './AddBoard.styled';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport sprite from '../../assets/fonts/images/icons/icons-sprite.svg';\nimport { useState } from 'react';\nimport data from '../../assets/fonts/images/backs-small/backs.json';\nimport { createBoard } from '../../redux/cards/cardsReducers';\n\nconst AddBoard = () => {\n  const options = [\n    '#icon-Project',\n    '#icon-star',\n    '#icon-loading',\n    '#icon-puzzle-piece',\n    '#icon-container',\n    '#icon-lightning',\n    '#icon-colors',\n    '#icon-hexagon',\n  ];\n\n  const [bgdImg, setBgdImg] = useState('');\n  const [icons, setIcon] = useState(options[0]);\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touched = {} },\n    reset,\n  } = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      title: '',\n      background: bgdImg,\n      icon: icons,\n    },\n    resolver: yupResolver(editColumnSchema),\n  });\n\n  const onSubmit = data => {\n    const { title, icon, background } = data;\n    console.log(data);\n\n    dispatch(createBoard({ title, icon, background }));\n\n    reset();\n  };\n\n  const handleBgDImg = url => {\n    setBgdImg(url);\n  };\n\n  const handleIcon = icon => {\n    setIcon(icon);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        type=\"text\"\n        id=\"title\"\n        placeholder=\"Title\"\n        {...register('title')}\n        error={touched.title && errors.title && errors.title.message}\n      />\n      {errors.title && <Error>{errors.title.message}</Error>}\n\n      <FormWrapper>\n        <FormTitle>Icons</FormTitle>\n        <RadioBtnWrapper>\n          {options.map((icon, idx) => (\n            <IconWrapper key={idx}>\n              <Icon\n                className={icons === icon ? 'active' : ''}\n                onClick={() => handleIcon(icon)}\n                width={18}\n                height={18}\n              >\n                <use href={sprite + icon} width={18} height={18} />\n              </Icon>\n              <DefaultRadioBtn\n                type=\"radio\"\n                value={icon}\n                {...register('icon')}\n              />\n            </IconWrapper>\n          ))}\n        </RadioBtnWrapper>\n      </FormWrapper>\n\n      <FormWrapper>\n        <FormTitle>Backgrounds</FormTitle>\n        <RadioBtnWrapper>\n          {data.map((background, idx) => (\n            <label key={idx}>\n              <BgcItem\n                onClick={() => handleBgDImg(background.url)}\n                className={bgdImg === background.url ? 'active' : ''}\n              >\n                {background.url !== '' && (\n                  <CustomRadioBtn\n                    $url={background.url}\n                    onClick={() => handleBgDImg(background.url)}\n                    className={bgdImg === background.url ? 'active' : ''}\n                  />\n                )}\n              </BgcItem>\n              <DefaultRadioBtn\n                type=\"radio\"\n                value={background.url}\n                {...register('background')}\n              />\n            </label>\n          ))}\n        </RadioBtnWrapper>\n      </FormWrapper>\n\n      <ButtonPlus type=\"submit\" approve={true} text=\"Create\" />\n    </Form>\n  );\n};\n\nexport default AddBoard;\n","import React from 'react';\nimport {\n  Div,\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  CloseModalCrossStyled,\n} from '../EditProfileModal/EditProfileModal.styled';\nimport { Close } from 'assets/fonts/images/icons/Close';\nimport AddBoard from 'components/AddBoard/AddBoard';\n\nconst AddBoardModal = ({ onClose }) => {\n  return (\n    <Div onClick={onClose}>\n      <ModalContainer onClick={e => e.stopPropagation()}>\n        <ModalHeader>\n          <ModalTitle>New board</ModalTitle>\n          <CloseModalCrossStyled type=\"button\" onClick={onClose}>\n            <Close />\n          </CloseModalCrossStyled>\n        </ModalHeader>\n        <AddBoard />\n      </ModalContainer>\n    </Div>\n  );\n};\n\nexport default AddBoardModal;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: ${props => (props.isOpen ? 'block' : 'none')};\n  background-color: rgba(0, 0, 0, 0.5); /* Прозорий сірий колір */\n  z-index: 99;\n`;\nexport const Aside = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  width: 285px;\n  padding: 24px;\n\n  /* z-index: ; */\n  max-height: 100vh;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  background-color: ${props => props.theme.colors.backgroundColor};\n  transform: translateX(-100%);\n  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n\n  ${props =>\n    props.isOpen\n      ? 'transform: translateX(0);'\n      : 'transform: translateX(-110%);'}\n\n  @media screen and (max-width: 767px) {\n    width: 225px;\n    padding: 14px 14px 24px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 260px;\n    transform: translateX(0);\n  }\n`;\n\nexport const Logo = styled(NavLink)`\n  position: relative;\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  text-decoration: none;\n  margin-bottom: 60px;\n  gap: 8px;\n`;\n\nexport const IconLogo = styled.svg`\n  height: 32px;\n  width: 32px;\n`;\n\nexport const LogoText = styled.h1`\n  color: ${props => props.theme.colors.whiteColor};\n  font-family: Poppins;\n  font-size: 16px;\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\n\nexport const MyBoardsText = styled.p`\n  font-family: Poppins;\n  font-size: 12px;\n  letter-spacing: -0.24px;\n  margin-bottom: 8px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nexport const AddBoardBlock = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-top: 1px solid ${props => props.theme.underlineColor};\n  border-bottom: 1px solid ${props => props.theme.underlineColor};\n  padding: 14px 0;\n`;\n\nexport const CreateNewBoard = styled.p`\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  width: 76px;\n  cursor: pointer;\n`;\n\nexport const BtnAdd = styled.button`\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  background-color: ${props => props.theme.colors.priorityGreen};\n  border: none;\n  outline: none;\n  padding: 8px 10px;\n  cursor: pointer;\n  transition: all 150ms linear;\n  &hover {\n    background-color: ${props => props.theme.colors.plusBtnHover};\n  }\n`;\n\nexport const IconPlus = styled.svg`\n  height: 20px;\n  width: 20px;\n  stroke: ${props => props.theme.colors.svgBackColor};\n`;\n\nexport const BtnLogOut = styled.button`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  gap: 14px;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const IconLogOut = styled.svg`\n  height: 32px;\n  width: 32px;\n  stroke: #bedbb0;\n  fill: transparent;\n  /* stroke: ${props => props.theme.sidebarLogout}; */\n  transition: all 150ms linear;\n\n  :hover {\n    opacity: 0.5;\n  }\n`;\n\nexport const TextLogOut = styled.p`\n  font-size: 16px;\n  font-family: Poppins;\n  font-weight: 500;\n  transition: all 150ms linear;\n  color: #fff;\n  :hover {\n    opacity: 0.5;\n  }\n`;\n\nexport const IconClose = styled.svg`\n  position: absolute;\n  top: 50%;\n  right: 0;\n  transform: translateY(-45%);\n  width: 20px;\n  height: 20px;\n\n  fill: transparent;\n  transition: all 150ms linear;\n\n  :hover {\n    opacity: 0.5;\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: none;\n  }\n`;\n","import React, { useState } from 'react'; // Додайте імпорт useState\nimport { useSelector, useDispatch } from 'react-redux'; // Додайте імпорт useSelector та useDispatch\nimport { closeMenuMode } from '../../redux/menu/menuSlice';\n// import { selectTheme } from '../../redux/selectors';\nimport { selectIsMenuOpen } from '../../redux/menu/selectors';\nimport BoardList from './BorderList/BorderList';\n// import NeedHelpBlock from 'components/Sidebar/NeedHelpBlock/NeedHelpBlock';\nimport AddBoardModal from '../Modals/AddBoardModal/AddBoardModal';\n\nimport sprite from '../../assets/fonts/images/icons/icons-sprite.svg';\nimport {\n  Aside,\n  Logo,\n  IconLogo,\n  LogoText,\n  MyBoardsText,\n  AddBoardBlock,\n  CreateNewBoard,\n  BtnAdd,\n  IconPlus,\n  BtnLogOut,\n  IconLogOut,\n  TextLogOut,\n  Backdrop,\n} from './Sidebar.styled';\nimport { logoutUser } from '../../redux/authorization/authReducer';\n\nconst Sidebar = ({ boardId }) => {\n  const dispatch = useDispatch();\n  //   const activeUserTheme = useSelector(selectTheme);\n  const menuMode = useSelector(selectIsMenuOpen);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleClose = () => {\n    setIsModalOpen(false);\n  };\n  const handleBackdropClick = () => {\n    dispatch(closeMenuMode()); // Закриваємо Sidebar при кліку на фон\n  };\n  //   const setIconLogo = () => {\n  //     if (activeUserTheme === 'dark' || activeUserTheme === 'light') {\n  //       return '#icon-logo';\n  //     } else if (activeUserTheme === 'violet') {\n  //       return '#icon-logo-violet';\n  //     }\n  //   };\n\n  return (\n    <Backdrop isOpen={menuMode} onClick={handleBackdropClick}>\n      <Aside isOpen={menuMode} onClick={e => e.stopPropagation()}>\n        <div style={{ width: '100%' }}>\n          <Logo>\n            <IconLogo>\n              <use href={sprite + '#icon-logo'} />\n            </IconLogo>\n            <LogoText>Task Pro</LogoText>\n          </Logo>\n\n          <MyBoardsText>My boards</MyBoardsText>\n\n          <AddBoardBlock>\n            <CreateNewBoard onClick={handleOpen}>\n              Create a new board\n            </CreateNewBoard>\n\n            <BtnAdd type=\"button\" onClick={handleOpen}>\n              <IconPlus aria-label=\"add icon\">\n                <use href={sprite + `#icon-plus`} />\n              </IconPlus>\n            </BtnAdd>\n          </AddBoardBlock>\n          <BoardList />\n        </div>\n\n        <div style={{ width: '100%' }}>\n          {/* <NeedHelpBlock /> */}\n\n          <BtnLogOut type=\"button\" onClick={() => dispatch(logoutUser())}>\n            <IconLogOut aria-label=\"logout icon\">\n              <use href={sprite + `#icon-login`} />\n            </IconLogOut>\n\n            <TextLogOut>Log out</TextLogOut>\n          </BtnLogOut>\n        </div>\n\n        {isModalOpen && <AddBoardModal onClose={handleClose} />}\n      </Aside>\n    </Backdrop>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Burger from 'assets/fonts/images/icons/Burger';\nimport EditProfileModal from 'components/Modals/EditProfileModal/EditProfileModal';\nimport {\n  HeaderSection,\n  BurgerBtn,\n  Avatar,\n  UserLogoContainer,\n  UserNameText,\n  Ava,\n} from './Header.styled';\nimport { selectUserData } from '../../redux/selectors';\nimport userLight from '../../assets/fonts/images/userLogo/userLight.jpg';\nimport userDark from '../../assets/fonts/images/userLogo/userDark.jpg';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport { openMenuMode } from '../../redux/menu/menuSlice';\nconst Header = () => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const avatarURL = useSelector(state => state.avatarURL);\n  const theme = useSelector(state => state.auth.theme);\n  const userData = useSelector(selectUserData);\n  const userEmail = userData?.email ?? 'Sign in';\n  const userEmailSplit = userEmail.split('@')[0];\n  const userName = userData?.userName;\n  const userAvatar = userData?.avatarURL;\n\n  const handleOpenMenu = () => {\n    dispatch(openMenuMode());\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <HeaderSection>\n      <BurgerBtn type=\"button\" onClick={handleOpenMenu}>\n        <Burger width={24} height={24} fillColor={'#161616'} />\n      </BurgerBtn>\n      <Sidebar isOpen={isModalOpen} />\n      <UserLogoContainer onClick={openModal}>\n        {userName ? (\n          <div>\n            <UserNameText>{userName}</UserNameText>\n          </div>\n        ) : (\n          <div>{userEmailSplit}</div>\n        )}\n        {userAvatar ? (\n          <Avatar src={userAvatar} alt=\"userPhoto\" />\n        ) : (\n          <Ava\n            src={avatarURL || (theme === 'light' ? userLight : userDark)}\n            alt=\"Avatar\"\n          />\n        )}\n      </UserLogoContainer>\n      {isModalOpen && <EditProfileModal onClose={closeModal} />}\n    </HeaderSection>\n  );\n};\nexport default Header;\n","import styled from 'styled-components';\n\nexport const HomePageContainer = styled.div`\n  /* position: relative; */\n  height: 100vh;\n  overflow-x: auto;\n  overflow-y: hidden;\n  margin: 0 auto;\n  display: flex;\n  @media (min-width: 1440px) {\n    max-width: 144rem;\n    display: flex;\n\n    justify-content: center;\n  }\n`;\n\nexport const MainContainer = styled.div`\n  width: 100%;\n  @media (min-width: 1440px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 90vh;\n  max-height: 90vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 24px;\n  }\n`;\n\nexport const TextBox = styled.div`\n  width: 486px;\n\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px; /* 128.571% */\n  letter-spacing: -0.28px;\n`;\n\nexport const Link = styled.button`\n  color: ${props => props.theme.colors.lightGreen};\n  border: none;\n  cursor: pointer;\n  background-color: transparent;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n  margin-left: 3px;\n  margin-right: 3px;\n`;\n","import React, { useState } from 'react';\nimport { Container, Link, TextBox } from './Board.styled';\nimport AddBoardModal from 'components/Modals/AddBoardModal/AddBoardModal';\n\nconst Board = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Container>\n        <TextBox>\n          Before starting your project, it is essential{' '}\n          <Link onClick={openModal}>to create a board</Link> to visualize and\n          track all the necessary tasks and milestones. This board serves as a\n          powerful tool to organize the workflow and ensure effective\n          collaboration among team members.\n        </TextBox>\n      </Container>\n      {isModalOpen && <AddBoardModal onClose={closeModal} />}\n    </>\n  );\n};\n\nexport default Board;\n","import React from 'react';\n\nimport { useTheme } from '@mui/material';\nimport Header from '../Header/Header';\nimport { HomePageContainer, MainContainer } from './Home.styled';\nimport { ThemeProvider } from 'styled-components';\nimport Board from 'components/StartBoard/Board/Board';\nimport { useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Sidebar from '../Sidebar/Sidebar';\nconst HomePage = () => {\n  const theme = useTheme();\n  const location = useLocation();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Sidebar />\n      <HomePageContainer>\n        <MainContainer>\n          <Header /> {location.pathname === '/home' && <Board />}\n          {/* В outlet БУДЕ РЕНДЕРИТИСЯ БОРД */}\n          <Suspense fallback={<div>Loading....</div>}>\n            <Outlet />\n          </Suspense>\n        </MainContainer>\n      </HomePageContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default HomePage;\n","import Home from 'components/Home/Home';\n\nconst HomePage = () => {\n  return (\n    <>\n      <Home />\n    </>\n  );\n};\n\nexport default HomePage;\n","export const selectIsMenuOpen = state => state.menuMode.isMenuOpen;\n"],"names":["Close","_jsx","xmlns","width","height","viewBox","fill","children","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Eye","_jsxs","EyeSlash","Wrap","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Error","_templateObject3","Button","_templateObject4","Form","_templateObject5","Container","_templateObject6","_templateObject7","props","$approve","theme","colors","inputColor","blackColor","accentColor","IconWrapper","Icon","whiteColor","_ref","text","approve","onOpen","type","onClick","href","sprite","CloseModalCrossStyled","Div","ModalContainer","priorityGreen","ModalHeader","ModalTitle","emailRegexp","logInSchema","yup","shape","email","matches","required","password","min","max","registrationSchema","name","editColumnSchema","message","title","fillColor","strokeColor","Wrapper","url","Avatar","UserButton","HiddenInput","_errors$name","_errors$email","dispatch","useDispatch","avatarURL","useSelector","state","auth","_useState","useState","_useState2","_slicedToArray","selectedAvatar","setSelectedAvatar","_useState3","_useState4","showPassword","setShowPassword","_useForm","useForm","mode","defaultValues","resolver","yupResolver","register","handleSubmit","_useForm$formState","formState","errors","_useForm$formState$to","touched","reset","src","userLight","userDark","alt","document","querySelector","click","className","accept","onChange","event","file","target","files","size","toast","reader","FileReader","onload","result","readAsDataURL","onSubmit","data","updateUser","console","log","_objectSpread","placeholder","id","error","autoComplete","onClose","e","stopPropagation","EditProfile","UserLogoContainer","UserNameText","_templateObject8","_templateObject9","_templateObject10","Ava","_templateObject11","HeaderSection","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","BurgerBtn","_templateObject17","_templateObject18","FormWrapper","FormTitle","RadioBtnWrapper","DefaultRadioBtn","CustomRadioBtn","$url","BgcItem","boardId","bgdImg","setBgdImg","icons","setIcon","icon","background","handleBgDImg","values","updatedData","editBoard","_id","map","idx","value","ButtonPlus","isOpen","EditBoard","StyledLink","NavLink","sidebarLightningFill","Board","BoardIcon","BoardTitle","IconsBlock","IconEdit","IconDel","index","onActive","activePojectIndex","board","open","setOpen","navigate","useNavigate","_Fragment","to","concat","closeMenuMode","dataset","setCurrentBoardId","handleNavigate","str","split","length","join","splice","checkTextLength","EditBoardModal","deleteDashboard","List","boards","dashboards","activeProjectIndex","setActiveProjectIndex","listRef","useRef","isMouseDownRef","lastClientYRef","useEffect","getAllDashboards","handleActiveProject","handleDeleteBoard","handleEditBoard","ref","onMouseDown","current","clientY","onMouseUp","onMouseMove","buttons","delta","scrollTop","BoardItem","onDelete","onEdit","options","createBoard","handleIcon","AddBoard","Backdrop","Aside","backgroundColor","Logo","IconLogo","LogoText","MyBoardsText","AddBoardBlock","underlineColor","CreateNewBoard","BtnAdd","plusBtnHover","IconPlus","svgBackColor","BtnLogOut","IconLogOut","sidebarLogout","TextLogOut","menuMode","selectIsMenuOpen","isModalOpen","setIsModalOpen","handleOpen","style","BoardList","logoutUser","AddBoardModal","_userData$email","userData","selectUserData","userEmailSplit","userName","userAvatar","openMenuMode","Burger","Sidebar","EditProfileModal","HomePageContainer","MainContainer","TextBox","Link","lightGreen","useTheme","location","useLocation","ThemeProvider","Header","pathname","Suspense","fallback","Outlet","Home","isMenuOpen"],"sourceRoot":""}